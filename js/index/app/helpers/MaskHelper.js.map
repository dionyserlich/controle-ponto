{"version":3,"sources":["helpers/MaskHelper.js"],"names":["MaskHelper","self","_eventoDoElemento","_elemento","evento","target","value","_hora24","valor","chave","keyCode","slice","key","length","replace","test","preventDefault","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,sB;AAEF,sCAAc;AAAA;;AACV;AACA;AACA;AACA,wBAAIC,OAAO,IAAX;;AAEAA,yBAAKC,iBAAL;AACAD,yBAAKE,SAAL;AACH;;;;yCAEWC,M,EAAQ;AAChBH,6BAAKC,iBAAL,GAAyBE,MAAzB;AACAH,6BAAKE,SAAL,GAAiBC,OAAOC,MAAxB;AACAJ,6BAAKE,SAAL,CAAeG,KAAf,GAAuBN,WAAWO,OAAX,CAAmBN,KAAKE,SAAL,CAAeG,KAAlC,CAAvB;AACH;;;4CAGcE,K,EAAO;;AAElB,4BAAIC,QAAQR,KAAKC,iBAAL,CAAuBQ,OAAvB,IAAkC,GAAlC,GAAwCF,MAAMG,KAAN,CAAY,CAAC,CAAb,CAAxC,GAA0DV,KAAKC,iBAAL,CAAuBU,GAA7F;AACA;AACA;AACA,4BAAIJ,MAAMK,MAAN,GAAe,CAAnB,EAAsB;AAClB,mCAAOL,MAAMG,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAP;AACH;;AAED;AACAH,gCAAQA,MAAMM,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;;AAEA;AACA;AACA,4BAAIN,MAAMK,MAAN,IAAgB,CAAhB,IAAqB,CAAC,QAAQE,IAAR,CAAaN,KAAb,CAA1B,EAA+C;AAC3CR,iCAAKC,iBAAL,CAAuBc,cAAvB;AACAR,oCAAQ,EAAR;AACA,mCAAOA,KAAP;AACH;;AAED;AACA;AACA;AACA;AACA;AACA,4BAAIA,MAAMK,MAAN,IAAgB,CAAhB,IAAqB,QAAQE,IAAR,CAAaP,MAAMS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAb,CAArB,IAA4D,CAAC,UAAUF,IAAV,CAAeN,KAAf,CAAjE,EAAwF;AACpF,mCAAOD,MAAMG,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAP;AACH;;AAED;AACA,4BAAIH,MAAMK,MAAN,IAAgB,CAAhB,IAAqB,CAAC,UAAUE,IAAV,CAAeN,KAAf,CAA1B,EAAiD;AAC7C,mCAAOD,MAAMG,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAP;AACH;;AAED;AACA,4BAAIH,MAAMK,MAAN,IAAgB,CAApB,EAAuB;AACnB;AACAZ,iCAAKC,iBAAL,CAAuBc,cAAvB;AACA;AACA;AACA,gCAAI,OAAOD,IAAP,CAAYN,KAAZ,CAAJ,EAAwB;AACpB;AACAD,wCAAQA,MAAMM,OAAN,CAAc,qBAAd,EAAqC,OAArC,CAAR;AACH;AAEJ;;AAED;AACA,+BAAON,KAAP;AACH;;;;;;+BAGUR,U","file":"helpers/MaskHelper.js","sourcesContent":["class MaskHelper {\n\n    constructor() {\n        //Adicionado o SELF como o THIS do MaskHelper, pois,\n        //na chamada foi do evento, foi feito um BIND do pontoControler, ou seja,\n        //quando usamos THIS dentro do método, ele se refere ao contexto PontoController\n        let self = this;\n\n        self._eventoDoElemento;\n        self._elemento;\n    }\n\n    static mask(evento) {\n        self._eventoDoElemento = evento;\n        self._elemento = evento.target;\n        self._elemento.value = MaskHelper._hora24(self._elemento.value);\n    };\n\n\n    static _hora24(valor) {\n\n        let chave = self._eventoDoElemento.keyCode == 229 ? valor.slice(-1) : self._eventoDoElemento.key;\n        //Se já estiver preenchido com a hora certa\n        //Não insere e retorna o que está no campo\n        if (valor.length > 5) {\n            return valor.slice(0, -1);\n        }\n\n        //Valida se tem caracteres diferentes de Números\n        valor = valor.replace(/\\D/g, \"\");\n\n        //Valida se é o primeiro elemento e\n        //se o que está sendo passado, é um número válido\n        if (valor.length == 1 && !/[0-2]/.test(chave)) {\n            self._eventoDoElemento.preventDefault();\n            valor = '';\n            return valor;\n        }\n\n        //valida as seguintes regras:\n        //1- É o segundo elemento?\n        //2- O primeiro elemento é o algarismo 2?\n        //3- O que está sendo digitado, é um número de 0 a 3?\n        //Obs.: essa regra foi criada para evitar horas inválidas (24,25,29, por exemplo);\n        if (valor.length == 2 && /([2])/.test(valor.substring(0, 1)) && !/([0-3])/.test(chave)) {\n            return valor.slice(0, -1);\n        }\n\n        //Valida se o terceiro digito é de 0 a 5\n        if (valor.length == 3 && !/([0-5])/.test(chave)) {\n            return valor.slice(0, -1);\n        }\n\n        //Valida se está no último digito\n        if (valor.length == 4) {\n            //Cancela o evento, para não duplicar o valor a ser enviado no campo\n            self._eventoDoElemento.preventDefault();\n            //debugger;\n            //Se o valor a ser enviado é um número\n            if (/(\\d)/.test(chave)) {\n                //insere a mascara de hora\n                valor = valor.replace(/([0-2]\\d)([0-5]\\d)/g, \"$1:$2\");\n            }\n\n        }\n\n        //retorna o valor\n        return valor;\n    }\n}\n\nexport default MaskHelper;"],"sourceRoot":"/source/"}