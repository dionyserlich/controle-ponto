{"version":3,"sources":["services/PontoService.js"],"names":["Ponto","RegistroPonto","PontoService","mesAno","idUser","firebase","auth","currentUser","uid","dateRange","inicio","moment","Date","ano","mes","format","fim","parseInt","Promise","resolve","reject","database","ref","orderByChild","startAt","endAt","once","then","snapshot","val","pontos","listaPontos","ponto","idPonto","push","_data_registro","catch","error","registro","child","id","update","remove"],"mappings":"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","file":"services/PontoService.js","sourcesContent":["import Ponto from '../models/Ponto';\nimport RegistroPonto from '../models/RegistroPonto';\n\nclass PontoService {\n\n    constructor() {}\n\n    obterPontos(mesAno) {\n\n        let idUser = firebase.auth().currentUser.uid;\n        let dateRange = {\n            inicio: moment(new Date(mesAno.ano, mesAno.mes, 1)).format('YYYY-MM-DD'),\n            fim: moment(new Date(mesAno.ano, parseInt(mesAno.mes) + 1, 0)).format('YYYY-MM-DD')\n        }\n\n        return new Promise((resolve, reject) => {\n            firebase.database().ref(`/pontos/${idUser}/`)\n                .orderByChild('_data_registro').startAt(dateRange.inicio).endAt(dateRange.fim)\n                .once('value')\n                .then(snapshot => {\n                    if (!snapshot.val()) reject(\"0001\");\n                    let pontos = snapshot.val();\n                    let listaPontos = [];\n                    let ponto;\n                    for (let idPonto in pontos) {\n                        ponto = pontos[idPonto];\n                        listaPontos.push(\n                            new RegistroPonto(\n                                ponto._data_registro,\n                                idPonto\n                            ))\n                    }\n                    resolve(listaPontos);\n                })\n                .catch(error => reject(error))\n        })\n\n    }\n\n    salvarRegistro(registro) {\n        let idUser = firebase.auth().currentUser.uid;\n        return new Promise((resolve, reject) => {\n            firebase.database().ref('/pontos/').child(idUser).push(registro)\n                .then(res => {\n                    resolve(\"Sucess\");\n                }).catch(error => {\n                    reject(error);\n                })\n        })\n    }\n\n    alterarPonto(registro) {\n        let idUser = firebase.auth().currentUser.uid;\n        return new Promise((resolve, reject) => {\n            firebase.database().ref(`/pontos/${idUser}/${registro.id}`).update(registro)\n                .then(sucess => resolve('Sucess'))\n                .catch(error => reject(error))\n        })\n    }\n\n    apagarPonto(registro) {\n        let idUser = firebase.auth().currentUser.uid;\n\n        //console.warn(registro,idUser,'oi')\n        return new Promise((resolve, reject) => {\n            firebase.database().ref(`/pontos/${idUser}/${registro}`).remove()\n                .then(sucess => resolve('Sucess'))\n                .catch(error => reject(error))\n        })\n    }\n}\n\nexport default PontoService;"],"sourceRoot":"/source/"}