{"version":3,"sources":["controllers/PontoController.js"],"names":["currentInstance","pontoController","PontosView","ModalRegistraPontoView","AdicionaRegistroView","BuscaPontosView","LoaderView","NavView","SomaHorasView","ListaPonto","Mensagem","RegistroPonto","Ponto","PontoService","HoraHelper","MaskHelper","PontoHelper","Bind","PontoController","$","document","querySelector","bind","self","_data_registro","_hora_registro","_id_registroElement","_mes_filtro","_ano_filtro","_somaHoraView","_modalRegistro","_buscaPontosComponenet","_adicionaRegistro","_navView","_loaderView","_loader","_listaPontos","_mensagem","_pontoService","hoje","Date","getMonth","getFullYear","_atualizaGrid","data","esvazia","importaPontos","ativo","style","display","event","preventDefault","moment","value","registro","Promise","all","salvarRegistro","then","limpaForm","toast","catch","console","error","_idRegistroPonto","alterarPonto","closeModal","_getElementosFormularioPonto","focus","_adicionaPonto","_alteraPonto","dataDate","_loaderAtivo","mesAno","mes","ano","obterPontos","groupBy","pontos","y","format","adiciona","limpaGrid","log","idRegistro","apagarPonto","retorno","err","attributes","getNamedItem"],"mappings":"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","file":"controllers/PontoController.js","sourcesContent":["import PontosView from '../views/PontosView';\nimport ModalRegistraPontoView from '../views/ModalRegistraPontoView';\nimport AdicionaRegistroView from '../views/AdicionaRegistroView';\nimport BuscaPontosView from '../views/BuscaPontosView';\nimport LoaderView from '../views/LoaderView';\nimport NavView from '../views/NavView';\nimport SomaHorasView from '../views/SomaHorasView';\nimport ListaPonto from '../models/ListaPonto';\nimport Mensagem from '../models/Mensagem';\nimport RegistroPonto from '../models/RegistroPonto'\nimport Ponto from '../models/Ponto';\nimport PontoService from '../services/PontoService';\nimport HoraHelper from '../helpers/HoraHelper';\nimport MaskHelper from '../helpers/MaskHelper';\nimport PontoHelper from '../helpers/PontoHelper';\nimport Bind from '../helpers/Bind';\n\nclass PontoController {\n\n    constructor() {\n        //o Bind associa o contexto do Document ao comportamento querySelector ($);\n        let $ = document.querySelector.bind(document);\n        let self = this;\n        //Formulários\n        ////Registro de Ponto                    \n        this._data_registro;\n        this._hora_registro;\n        this._id_registroElement;\n        ////Busca de Pontos\n        this._mes_filtro;\n        this._ano_filtro;\n\n        //Views\n        this._somaHoraView = new Bind($('#somaHorasView'), new SomaHorasView($('#somaHorasView')));\n        this._modalRegistro = new Bind($('#modalRegistraPontoView'), new ModalRegistraPontoView($('#modalRegistraPontoView'), self));\n        this._buscaPontosComponenet = new Bind($('#buscaPontosView'), new BuscaPontosView($('#buscaPontosView')));\n        this._adicionaRegistro = new Bind($('#adicionaRegistroView'), new AdicionaRegistroView($('#adicionaRegistroView')));\n        this._navView = new Bind($('#navView'), new NavView($('#navView')));\n        this._loaderView = new Bind($('#loaderView'), new LoaderView($('#loaderView')));\n        this._loader = $('.loader');\n        this._listaPontos = new Bind(new ListaPonto(), new PontosView($('#pontosView'), self), 'adiciona', 'esvazia');\n        //Models\n        this._mensagem = new Mensagem();\n\n        //Services\n        this._pontoService = new PontoService();\n    }\n\n    /************************Métodos Privados************************/\n    _carregaPontosDoMes() {\n        let hoje = new Date();\n\n        this._mes_filtro = hoje.getMonth();\n        this._ano_filtro = hoje.getFullYear();\n\n        this._atualizaGrid();\n    }\n    _atualizaGrid(data) {\n        this._listaPontos.esvazia(this._listaPontos);\n        this.importaPontos(null, data);\n    }\n\n    _loaderAtivo(ativo) {\n        if (!ativo) {\n            this._loader.style.display = 'none';\n        } else {\n            this._loader.style.display = 'block';\n        }\n    }\n\n    _adicionaPonto(event) {\n\n        event.preventDefault();\n\n        let data = new Date(moment(this._data_registro.value + this._hora_registro.value, 'DD-MM-YYYYHH:mm'));\n\n        let registro = new RegistroPonto(data);\n\n        //Evitando Callback Hell\n        Promise.all([\n                this._pontoService.salvarRegistro(registro)\n            ]).then(mensagem => {\n                this.limpaForm();\n                this._atualizaGrid(data);\n                this._mensagem.toast = \"Ponto adicionado com sucesso!\";\n            })\n            .catch(error => {\n                console.error(error)\n                this._mensagem.toast = \"Erro na adição do ponto. Por favor, verifique o console\";\n            });\n\n    }\n    _alteraPonto(event) {\n        let data = new Date(moment(this._data_registro.value + this._hora_registro.value, 'DD-MM-YYYYHH:mm'));\n        let registro = new RegistroPonto(data, this._idRegistroPonto);\n        Promise.all([this._pontoService.alterarPonto(registro)])\n            .then(callback => {\n                this.limpaForm();\n                this._atualizaGrid();\n                $('#modal-registro').closeModal();\n                this._mensagem.toast = \"Ponto alterado com sucesso!\";\n            }).catch(error => {\n                console.error(error)\n                this._mensagem.toast = \"Erro na alteração do registro.Por favor, verifique o console\";\n            })\n\n    }\n    _getElementosFormularioPonto() {\n        this._id_registroElement = document.querySelector('.form-cadastro-ponto');\n        this._data_registro = document.querySelector('#data_registro');\n        this._hora_registro = document.querySelector('#hora_registro');\n    }\n\n    /************************Métodos Públicos************************/\n    limpaForm() {\n        this._getElementosFormularioPonto();\n        this._idRegistroPonto = '';\n        this._hora_registro.value = '';\n        this._hora_registro.focus();\n\n    }\n\n    salvaPonto(event) {        \n        this._getElementosFormularioPonto();\n\n        if (!this._idRegistroPonto) {\n            this._adicionaPonto(event);\n        } else {\n            this._alteraPonto(event);\n        }\n    }\n\n\n    limpaGrid() {\n        return this._listaPontos.esvazia(this._listaPontos);\n    }\n\n\n    importaPontos(event, data = '') {\n\n        if (event) {\n            this._mes_filtro = document.querySelector('.mes-filtro').value;\n            this._ano_filtro = document.querySelector('.ano-filtro').value;\n        }\n        if (data) {\n            let dataDate = new Date(data);\n            this._mes_filtro = dataDate.getMonth();\n            this._ano_filtro = dataDate.getFullYear();\n        }\n\n\n        if (this._mes_filtro && this._ano_filtro) {\n            //ativa o loader\n            this._loaderAtivo(true);\n            if (event) event.preventDefault();\n\n            let mesAno = {\n                mes: this._mes_filtro,\n                ano: this._ano_filtro\n            }\n\n            //Evitando Callback Hell\n            Promise.all([\n                    this._pontoService.obterPontos(mesAno)\n                    //Pega o retorno dos pontos para tratar antes\n                    .then(pontos =>\n                        PontoHelper.groupBy(pontos, y =>\n                            moment(y._data_registro).format('YYYY-MM-DD')))\n                ]).then(pontos => {\n                    this._listaPontos.adiciona(pontos[0]);\n                    this._loaderAtivo(false);\n                    if (event) this._mensagem.toast = \"Dados importados com sucesso\"\n                })\n                .catch(error => {\n                    if (error = \"0001\") {\n                        this.limpaGrid()\n                        this._loaderAtivo(false);\n                        this._mensagem.toast = \"Não há pontos cadastrados para esse período\"\n                    } else {\n                        console.log(error);\n                        this._mensagem.toast = error\n                    }\n\n                });\n        }\n    }\n\n    excluirPonto(idRegistro) {\n\n        Promise.all([this._pontoService.apagarPonto(idRegistro)])\n            .then(retorno => {\n                console.log(retorno);\n                this._atualizaGrid();\n                this._mensagem.toast = \"Ponto excluído com sucesso!\";\n            }).catch(err => console.log(err));\n    }\n\n    get _idRegistroPonto() {\n        return this._id_registroElement.attributes.getNamedItem(\"id-registro\").value;\n    }\n    set _idRegistroPonto(value) {\n        this._id_registroElement.attributes.getNamedItem(\"id-registro\").value = value;\n    }\n\n};\n\nlet pontoController = new PontoController();\n\n//Usando \"singleton\"\nexport function currentInstance() {\n    return pontoController;\n}"],"sourceRoot":"/source/"}