{"version":3,"sources":["helpers/HoraHelper.js"],"names":["HoraHelper","Error","hora","m","moment","duration","minutes","hours","getDuration","horaFull","asHours","Math","trunc","round","toString","length","asMilliseconds","horaInicio","horaFim"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,sB;AAEF,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;;;gDAGkBC,I,EAAM;AACrB,4BAAIC,IAAIC,OAAOF,IAAP,EAAa,OAAb,CAAR;;AAEA,+BAAOE,OAAOC,QAAP,CAAgB;AACnBC,qCAASH,EAAEG,OAAF,EADU;AAEnBC,mCAAOJ,EAAEI,KAAF;AAFY,yBAAhB,CAAP;AAIH;;;kDAEoBF,Q,EAAU;;AAE3B,4BAAI,CAACA,QAAL,EAAe;AACX,mCAAO,KAAKG,WAAL,CAAiB,OAAjB,CAAP;AACA;AACH;;AAED,4BAAIC,WAAYJ,SAASK,OAAT,KAAqB,CAArB,GAAyBL,SAASK,OAAT,KAAqB,CAAC,CAA/C,GAAmDL,SAASK,OAAT,EAAnE;AACA,4BAAIH,QAAQI,KAAKC,KAAL,CAAWH,QAAX,CAAZ;AACA,4BAAIH,UAAUK,KAAKE,KAAL,CAAYJ,WAAW,CAAZ,GAAiB,EAA5B,CAAd;;AAEA,4BAAIF,MAAMO,QAAN,GAAiBC,MAAjB,IAA2B,CAA/B,EAAkC;AAC9BR,oCAAQ,MAAMA,KAAd;AACH;AACD,4BAAID,QAAQQ,QAAR,GAAmBC,MAAnB,IAA6B,CAAjC,EAAoC;AAChCT,sCAAU,MAAMA,OAAhB;AACH;AACD,+BAAOD,SAASW,cAAT,KAA4B,CAA5B,SAAoCT,KAApC,SAA6CD,OAA7C,GAA4DC,KAA5D,SAAqED,OAA5E;AAEH;;;qDAEuBW,U,EAAYC,O,EAAS;;AAEzC,+BAAOA,UAAUD,UAAjB;AACH;;;;;;+BAGUjB,U","file":"helpers/HoraHelper.js","sourcesContent":["class HoraHelper {\n\n    constructor() {\n        throw new Error('Essa classe não pode ser instanciada');\n    }\n\n\n    static getDuration(hora) {\n        let m = moment(hora, 'HH:mm');\n\n        return moment.duration({\n            minutes: m.minutes(),\n            hours: m.hours()\n        })\n    }\n\n    static getHoraString(duration) {\n\n        if (!duration) {\n            return this.getDuration(\"00:00\");\n            //throw new Error(\"Milissegundos não pode ser vazio\");\n        }\n\n        let horaFull = (duration.asHours() < 0 ? duration.asHours() * -1 : duration.asHours())\n        let hours = Math.trunc(horaFull);\n        let minutes = Math.round((horaFull % 1) * 60);\n\n        if (hours.toString().length == 1) {\n            hours = \"0\" + hours;\n        }\n        if (minutes.toString().length == 1) {\n            minutes = \"0\" + minutes;\n        }\n        return duration.asMilliseconds() < 0 ? `-${hours}:${minutes}` : `${hours}:${minutes}`;\n\n    }\n\n    static getDiferencaHora(horaInicio, horaFim) {\n\n        return horaFim - horaInicio;\n    }\n}\n\nexport default HoraHelper;"],"sourceRoot":"/source/"}